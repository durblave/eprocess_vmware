---
- name: 4.8_create a snapshot from a virtual machine
  hosts: localhost
  connection: local
  gather_facts: yes
  # vars:
  #   vm_name: "Unifi Wifi Controller 7.1"
  #   vm_datacenter:
  #   vm_folder:

  tasks:
    - name: creating vm snapshot
      block:
        - name: Getting state of all virtual machines
          community.vmware.vmware_vm_info:
          delegate_to: localhost
          register: vm_info

        - name: Gathering vm info
          community.vmware.vmware_guest_info:
            datacenter: "{{ item.datacenter }}"
            uuid: "{{ item.uuid }}"
          with_items:
            - "{{ vm_info.virtual_machines | community.general.json_query(query) }}"
          vars:
            query: "[?guest_name=='{{ vm_name }}']"
          register: guest_info
  
        - name: shutting down guest
          community.vmware.vmware_guest_powerstate:
            datacenter: "{{ item.datacenter }}"
            name: "{{ item.guest_name }}"
            state: shutdown-guest
            state_change_timeout: 200      
          with_items:
            - "{{ vm_info.virtual_machines | community.general.json_query(query) }}"
          vars:
            query: "[?guest_name=='{{ vm_name }}']"
          failed_when: vm_shutdown.instance.hw_power_status != 'poweredOff' and vm_shutdown.changed == false        
          register: vm_shutdown

        - name: Wait 15 seconds
          ansible.builtin.pause:
            seconds: 15

        - name: creating virtual machine snapshot
          vmware_guest_snapshot:
            datacenter: "{{ vm_datacenter }}"
            name: "{{ vm_name }}"
            state: present
            snapshot_name: "Ansible Managed Snapshot - {{ ansible_date_time.epoch }}"
            folder: "{{ vm_folder }}"
            description: "This snapshot is created by ansible {{ ansible_date_time.date }}"
            quiesce: true             
            # datacenter: "{{ item.datacenter }}" #"{{ vm_datacenter }}"
            # name: "{{ item.guest_name }}" #"{{ vm_name }}"
            # state: present
            # snapshot_name: "Ansible Managed Snapshot - {{ ansible_date_time.epoch }}"
            # folder: "{{ item.folder }}" #"{{ vm_folder }}"
            # description: "This snapshot is created by ansible {{ ansible_date_time.date }}"
            # quiesce: true    
          with_items:
            - "{{ vm_info.virtual_machines | community.general.json_query(query) }}"
          vars:
            query: "[?guest_name=='{{ vm_name }}']"                
          register: vm_snapshot

        - name: Wait 20 seconds
          ansible.builtin.pause:
            seconds: 20          

        - name: powering on guest
          community.vmware.vmware_guest_powerstate:
            datacenter: "{{ item.datacenter }}"
            name: "{{ item.guest_name }}"
            state: powered-on
            state_change_timeout: 200 
          with_items:
            - "{{ vm_info.virtual_machines | community.general.json_query(query) }}"
          vars:
            query: "[?guest_name=='{{ vm_name }}']"
          register: vm_poweron
          failed_when: vm_poweron.instance.hw_power_status != 'poweredOn' and vm_poweron.changed == false            
          
        - name: Wait 15 seconds
          ansible.builtin.pause:
            seconds: 15          